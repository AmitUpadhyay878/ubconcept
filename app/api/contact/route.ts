import { NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

export async function POST(request: Request) {
  try {
    const body = await request.json();    
    const { name, email, subject, message } = body;

    // Configure Nodemailer transporter
    // IMPORTANT: Store your email credentials in environment variables
    const transporter = nodemailer.createTransport({
      service: 'gmail', // Or your email provider
      auth: {
        user: process.env.EMAIL_USER, // Your email address
        pass: process.env.EMAIL_PASS, // Your email password or app password
      },
      port: 465, // Port for secure SSL connection
    });

    const mailOptions = {
      from: `"${name}" <${email}>`, // Sender address (shows sender's name and email)
      to: process.env.RECIPIENT_EMAIL, // Your receiving email address from env variable
      replyTo: email, // So you can reply directly to the sender
      subject: `New Contact Form Submission: ${subject}`,
      text: `Name: ${name}\nEmail: ${email}\nSubject: ${subject}\nMessage: ${message}`,
      html: `
<div style="font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 6px 18px rgba(0,0,0,0.06); border: 1px solid #e2e8f0;">
  <div style="background-color: #1a202c; color: #ffffff; padding: 24px 32px;">
    <h1 style="font-size: 24px; font-weight: 600; margin: 0; letter-spacing: -0.5px;">New Contact Message</h1>
  </div>
  <div style="padding: 28px 32px; background-color: #f7fafc;">
    <div style="margin-bottom: 24px;">
      <h2 style="font-size: 18px; font-weight: 600; color: #2d3748; margin: 0 0 12px 0;">Submission Details</h2>
      <div style="background-color: #ffffff; padding: 18px; border-radius: 6px; border: 1px solid #e2e8f0;">
        <p style="margin: 0 0 10px 0; color: #4a5568; font-size: 15px; line-height: 1.6;"><strong style="color: #2d3748; font-weight: 500; min-width: 90px; display: inline-block;">Name:</strong> ${name}</p>
        <p style="margin: 0 0 10px 0; color: #4a5568; font-size: 15px; line-height: 1.6;"><strong style="color: #2d3748; font-weight: 500; min-width: 90px; display: inline-block;">Email:</strong> <a href="mailto:${email}" style="color: #2b6cb0; text-decoration: none; font-weight: 500;">${email}</a></p>
        <p style="margin: 0; color: #4a5568; font-size: 15px; line-height: 1.6;"><strong style="color: #2d3748; font-weight: 500; min-width: 90px; display: inline-block;">Subject:</strong> ${subject}</p>
      </div>
    </div>
    <div>
      <h2 style="font-size: 18px; font-weight: 600; color: #2d3748; margin: 0 0 12px 0;">Message Content</h2>
      <div style="background-color: #ffffff; padding: 18px; border-radius: 6px; border: 1px solid #e2e8f0; color: #4a5568; font-size: 15px; line-height: 1.7;">
        ${message.replace(/\n/g, '<br>')}
      </div>
    </div>
  </div>
  <div style="background-color: #edf2f7; color: #718096; padding: 20px 32px; text-align: center; font-size: 13px; border-top: 1px solid #e2e8f0;">
    <p style="margin: 0;">This email was automatically generated by the contact form on UBConcept.</p>
    <p style="margin: 4px 0 0;">&copy; ${new Date().getFullYear()} UBConcept. All rights reserved.</p>
  </div>
</div>
      `

    };

    await transporter.sendMail(mailOptions);

    return NextResponse.json({ message: 'Form submitted successfully! Email sent.' }, { status: 200 });
  } catch (error) {
    console.error('Error processing contact form or sending email:', error);
    return NextResponse.json({ message: 'Error submitting form. Please try again.' }, { status: 500 });
  }
}